services:

  ai-server:
    image: ai-server-image
    build:
      context: .
      dockerfile: dockerfiles/ai-server.Dockerfile
      args:
        AI_PORT: ${AI_PORT}
        OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - ${AI_PORT}:${AI_PORT}
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://${AI_SERVER_PRIVATE_IP}:{AI_PORT}/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: on-failure
    volumes:
      - mongodb_data:/opt/ai-server/data
    networks:
      my-network:
        ipv4_address: ${AI_SERVER_PRIVATE_IP}

  app-server:
    image: app-server-image
    build:
      context: .
      dockerfile: dockerfiles/app-server.Dockerfile
      args:
        APP_PORT: ${APP_PORT}
        HOST: ${HOST}
    ports:
      - ${APP_PORT}:${APP_PORT}
    env_file:
      - .env
    networks:
      my-network:
        ipv4_address: ${APP_SERVER_PRIVATE_IP}
    restart: on-failure

  tests:
    image: tests-image
    build:
      dockerfile: dockerfiles/test-server.Dockerfile
    env_file:
      - .env
    ports:
      - ${TESTS_PORT}:${TESTS_PORT}
    networks:
      my-network:
        ipv4_address: ${TESTS_PRIVATE_IP}
    volumes:
      - ./tests/logs/allure-results:/logs/allure-results
    depends_on:
      - ai-server
      - app-server
      - jenkins

  jenkins:
    image: jenkins/jenkins:latest
    privileged: true
    user: root
    ports:
      - ${JENKINS_PORT}:8080
    env_file:
      - .env
    container_name: jenkins
    volumes:
      - "/home/jenkins_compose/jenkins_configuration:/var/jenkins_home"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - .:/app
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    networks:
      my-network:
        ipv4_address: ${JENKINS_PRIVATE_IP}

  allure-server:
    image: "frankescobar/allure-docker-service"
    environment:
      CHECK_RESULTS_EVERY_SECONDS: NONE
      KEEP_HISTORY: 1
      KEEP_HISTORY_LATEST: 25
    ports:
      - "${ALLURE_SERVER_PORT}:5050"
    volumes:
      - ./tests/logs/allure-results:/tests/logs/allure-results
      - ${PWD}/allure-results:/app/allure-results
      - ${PWD}/allure-reports:/app/default-reports
    networks:
      my-network:
        ipv4_address: ${ALLURE_SERVER_PRIVATE_IP}
    depends_on:
      - tests

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - ${DB_PORT}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/data/db
    networks:
      my-network:
        ipv4_address: ${DB_PRIVATE_IP}

  redis:
    image: redis:alpine
    volumes:
      - shared_tests:/health_checks
    healthcheck:
      test: /health_checks/redis.sh
      interval: "5s"
    networks:
      - my-network

networks:
  my-network:
    ipam:
      config:
        - subnet: 192.168.1.0/24

volumes:
  mongodb_conf:
  mongodb_data:
  mongodb_extensions:
  mongodb_logs:
  mongodb_temp:
  shared_tests:
